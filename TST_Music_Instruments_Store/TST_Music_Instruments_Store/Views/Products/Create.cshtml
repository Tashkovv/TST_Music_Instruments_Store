@model TST_Music_Instruments_Store.Models.Product

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="margin-top: 7%; margin-bottom: 9%;">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-dark float-left" })
        <h3 class="text-center">Add new product</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.NameOfProduct, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.NameOfProduct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameOfProduct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.ProductCategory, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ProductCategory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.ProductSubCategory, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ProductSubCategory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductSubCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.StringCount, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.StringCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StringCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.StringSize, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.StringSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StringSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-flex justify-content-center">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2 mt-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md" style="margin-left: 41.7%;">
                <input type="submit" value="Create" class="btn btn-dark btn-block" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
